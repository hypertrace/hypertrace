# there are 2 modes in which query services can run `merged` and `individually`
# merge-query-services.enabled = true and merge-query-services.disabled = false
# will run hypertrace-data-config and hypertrace-data-query service (merged)
# instead of entity, config, attribute, query & gateway service
# to go back to running services `individually` toggle the values 
# Property                       `merged`                        `individually`
# entityServiceHost     hypertrace-data-config-service            entity-service
# entityServicePort           9012                                   50061
# attributeServiceHost  hypertrace-data-config-service            attribute-service
# attributeServicePort        9012                                   9012
# configServiceHost     hypertrace-data-config-service            config-service
# configServicePort           9012                                   50101
# gatewayServiceHost    hypertrace-data-query-service             gateway-service
# gatewayServicePort          9001                                   50071
merge-query-services: 
  enabled: true
  disabled: false

# config for `merged` 
entityServiceHost: &entityServiceHost hypertrace-data-config-service
entityServicePort: &entityServicePort 9012 
attributeServiceHost: &attributeServiceHost hypertrace-data-config-service
attributeServicePort: &attributeServicePort 9012
configServiceHost: &configServiceHost hypertrace-data-config-service
configServicePort: &configServicePort 9012
gatewayServiceHost: &gatewayServiceHost hypertrace-data-query-service
gatewayServicePort: &gatewayServicePort 9001

hypertrace-collector:
  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 200m
      memory: 400Mi
  service:
    type: LoadBalancer
    ports:
    - name: grpc-otlp
      port: 4317
      targetPort: 4317
      protocol: TCP
    - name: http-otlp
      port: 55681
      targetPort: 55681
      protocol: TCP
    - name: grpc-opencensus
      port: 55678
      targetPort: 55678
      protocol: TCP
    - name: http-jaeger
      port: 14268
      targetPort: 14268
      protocol: TCP
    - name: grpc-jaeger
      port: 14250
      targetPort: 14268
      protocol: TCP
    - name: http-zipkin
      port: 9411
      targetPort: 9411
      protocol: TCP
  configMap:
    data:
      extensions:
        health_check: {}
      receivers:
        otlp:
          protocols:
            grpc: 
              endpoint: "0.0.0.0:4317"
            http: 
              endpoint: "0.0.0.0:55681"
        opencensus: 
          endpoint: "0.0.0.0:55678"
        zipkin: 
          endpoint: "0.0.0.0:9411"
        jaeger:
          protocols:
            grpc: 
              endpoint: "0.0.0.0:14250"
            thrift_http: 
              endpoint: "0.0.0.0:14268"
        # Collect own metrics
        prometheus:
          config:
            scrape_configs:
              - job_name: "otel-collector"
                scrape_interval: 10s
                static_configs:
                  - targets: ["0.0.0.0:8888"]
      processors:
        batch: {}
      exporters:
        kafka:
          protocol_version: 2.0.0
          brokers:
            - bootstrap:9092
          topic: jaeger-spans
          encoding: jaeger_proto
      service:
        extensions: [health_check, pprof, zpages]
        pipelines:
          traces:
            receivers: [otlp, opencensus, jaeger, zipkin]
            processors: [batch]
            exporters: [kafka]

span-normalizer:
  resources:
    requests:
      cpu: "0.5"
      memory: "512Mi"
    limits:
      cpu: "1"
      memory: "512Mi"
  spanNormalizerConfig:
    processor:
      defaultTenantId: __default
    flink:
      job:
        metrics:
          reporters: "slf4j"
    metrics:
      reporter:
        names: ["console"]
  kafka-topic-creator:
    enabled: true
    kafka:
      topics:
        - name: raw-spans-from-jaeger-spans
          replicationFactor: 3
          partitions: 8
          configs:
            - retention.bytes=1073741824
            - retention.ms=21600000

raw-spans-grouper:
  resources:
    requests:
      cpu: "0.5"
      memory: "1Gi"
    limits:
      cpu: "1"
      memory: "1Gi"
  volumeClaimTemplates:
    name: hypertrace
    storageClassName: hypertrace
    storageRequestSize: 1Gi
  kafka-topic-creator:
    kafka:
      topics:
        - name: structured-traces-from-raw-spans
          replicationFactor: 3
          partitions: 8
          configs:
            - retention.bytes=1073741824
            - retention.ms=21600000

hypertrace-trace-enricher:
  traceEnricherConfig:
    entityServiceHost: *entityServiceHost 
    entityServicePort: *entityServicePort
    attributeServiceHost: *attributeServiceHost
    attributeServicePort: *attributeServicePort
    configServiceHost: *configServiceHost
    configServicePort: *configServicePort 
  javaOpts: "-Xms512M -Xmx768M"
  resources:
    requests:
      cpu: "0.5"
      memory: "1Gi"
    limits:
      cpu: "1"
      memory: "1Gi"

  kafka-topic-creator:
    enabled: true
    kafka:
      topics:
        - name: enriched-structured-traces
          replicationFactor: 3
          partitions: 8
          configs:
            - retention.bytes=1073741824
            - retention.ms=21600000

hypertrace-view-generator:
  viewCreatorJobConfig:
    data:
      application.conf: |-
        pinot.retentionTimeValue = 5
        pinot.retentionTimeUnit = DAYS
              
  kafka-topic-creator:
    enabled: true
    kafka:
      topics:
        - name: backend-entity-view-events
          replicationFactor: 3
          partitions: 8
          configs:
            - retention.bytes=1073741824
            - retention.ms=21600000
        - name: raw-trace-view-events
          replicationFactor: 3
          partitions: 8
          configs:
            - retention.bytes=1073741824
            - retention.ms=21600000
        - name: raw-service-view-events
          replicationFactor: 3
          partitions: 8
          configs:
            - retention.bytes=1073741824
            - retention.ms=21600000
        - name: service-call-view-events
          replicationFactor: 3
          partitions: 8
          configs:
            - retention.bytes=1073741824
            - retention.ms=21600000
        - name: span-event-view
          replicationFactor: 3
          partitions: 8
          configs:
            - retention.bytes=1073741824
            - retention.ms=21600000

gateway-service:
  resources:
    requests:
      cpu: "0.25"
      memory: "512Mi"
    limits:
      cpu: "0.5"
      memory: "512Mi"

entity-service:
  resources:
    requests:
      cpu: "0.25"
      memory: "512Mi"
    limits:
      cpu: "0.5"
      memory: "512Mi"

attribute-service:
  resources:
    requests:
      cpu: "0.25"
      memory: "128Mi"
    limits:
      cpu: "0.5"
      memory: "256Mi"

query-service:
  resources:
    requests:
      cpu: "0.25"
      memory: "512Mi"
    limits:
      cpu: "0.5"
      memory: "512Mi"
  queryServiceConfig:
    data:
      zookeeperConnectionString: zookeeper:2181/pinot/hypertrace-views

config-service:
  resources:
    requests:
      cpu: "0.1"
      memory: "128Mi"
    limits:
      cpu: "0.25"
      memory: "256Mi"
      
hypertrace-data-query-service:
  queryServiceConfig:
    data:
      attributeClient:
        host: hypertrace-data-config-service
        port: 9012
  gatewayServiceConfig:
    data:
      application.conf: |-
        query.service.config = {
          host = localhost
          port = 9001
        }
        entity.service.config = {
          host = hypertrace-data-config-service
          port = 9012
        }
        attributes.service.config = {
          host = hypertrace-data-config-service
          port = 9012
        }
  resources:
    requests:
      cpu: "0.25"
      memory: "512Mi"
    limits:
      cpu: "0.5"
      memory: "512Mi"

hypertrace-data-config-service:
  resources:
    requests:
      cpu: "0.25"
      memory: "512Mi"
    limits:
      cpu: "0.5"
      memory: "512Mi"       

hypertrace-graphql-service:
  javaOpts: "-Xms128M -Xmx256M"
  serviceConfig:
    defaultTenantId: "__default"
    gatewayService:
      host: *gatewayServiceHost
      port: *gatewayServicePort
    attributeService:
      host: *attributeServiceHost
      port: *attributeServicePort
    entityService:
      host: *entityServiceHost
      port: *entityServicePort
    configService:
      host: *configServiceHost
      port: *configServicePort
  resources:
    requests:
      cpu: "0.25"
      memory: "320Mi"
    limits:
      cpu: "0.5"
      memory: "320Mi"

hypertrace-ui:
  service:
    type: LoadBalancer
  nginxConfig:
    graphqlRedirectEnabled: true
  resources:
    requests:
      cpu: "0.1"
      memory: "128Mi"
    limits:
      cpu: "0.25"
      memory: "256Mi"

kafka-topic-creator:
  enabled: false
