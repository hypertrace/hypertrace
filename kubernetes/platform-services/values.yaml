merge-query-services: 
  enabled: false
  disabled: true

# when merge-query-services.enabled, set 
# entityServiceHost: &entityServiceHost hypertrace-data-config-service
# entityServicePort: &entityServicePort 9012 
# attributeServiceHost: &attributeServiceHost hypertrace-data-config-service
# attributeServicePort: &attributeServicePort 9012
# configServiceHost: &configServiceHost hypertrace-data-config-service
# configServicePort: &configServicePort 9012
# gatewayServiceHost: &gatewayServiceHost hypertrace-data-query-service
# gatewayServicePort: &gatewayServicePort 9001

entityServiceHost: &entityServiceHost entity-service 
entityServicePort: &entityServicePort 50061 
attributeServiceHost: &attributeServiceHost attribute-service
attributeServicePort: &attributeServicePort 9012
configServiceHost: &configServiceHost config-service
configServicePort: &configServicePort 50101
gatewayServiceHost: &gatewayServiceHost gateway-service
gatewayServicePort: &gatewayServicePort 9001

hypertrace-oc-collector:
  resources:
    requests:
      cpu: "0.5"
      memory: "256Mi"
    limits:
      cpu: "1"
      memory: "256Mi"
  containerPorts:
    - name: grpc-opencensus
      containerPort: 55678
    - name: http-jaeger
      containerPort: 14268
    - name: jaeger-tchannel
      containerPort: 14267
    - name: zipkin
      containerPort: 9411
  service:
    type: LoadBalancer
    ports:
      - name: grpc-opencensus
        port: 55678
        targetPort: 55678
        protocol: TCP
      - name: http-jaeger
        port: 14268
        targetPort: 14268
        protocol: TCP
      - name: jaeger-tchannel
        port: 14267
        targetPort: 14267
        protocol: TCP
      - name: zipkin
        port: 9411
        targetPort: 9411
        protocol: TCP
  configMap:
    name: hypertrace-oc-collector-conf
    data:
      log-level: INFO
      receivers:
        opencensus:
          # keepalive settings can help load balancing, see receiver/README.md for more info.
          keepalive:
            server-parameters:
              max-connection-age: 120s
              max-connection-age-grace: 30s
        jaeger: {}
        zipkin: {}
      exporters:
        kafka:
          brokers: ["bootstrap:9092"]
          topic: "jaeger-spans"
  kafka-topic-creator:
    enabled: true
    kafka:
      topics:
        - name: jaeger-spans
          replicationFactor: 3
          partitions: 8
          configs:
            - retention.bytes=1073741824
            - retention.ms=21600000

span-normalizer:
  resources:
    requests:
      cpu: "0.5"
      memory: "512Mi"
    limits:
      cpu: "1"
      memory: "512Mi"
  spanNormalizerConfig:
    processor:
      defaultTenantId: __default
    flink:
      job:
        metrics:
          reporters: "slf4j"
    metrics:
      reporter:
        names: ["console"]
  kafka-topic-creator:
    enabled: true
    kafka:
      topics:
        - name: raw-spans-from-jaeger-spans
          replicationFactor: 3
          partitions: 8
          configs:
            - retention.bytes=1073741824
            - retention.ms=21600000

raw-spans-grouper:
  resources:
    requests:
      cpu: "0.5"
      memory: "1Gi"
    limits:
      cpu: "1"
      memory: "1Gi"
  volumeClaimTemplates:
    name: hypertrace
    storageClassName: hypertrace
    storageRequestSize: 1Gi
  kafka-topic-creator:
    kafka:
      topics:
        - name: structured-traces-from-raw-spans
          replicationFactor: 3
          partitions: 8
          configs:
            - retention.bytes=1073741824
            - retention.ms=21600000

hypertrace-trace-enricher:
  traceEnricherConfig:
    entityServiceHost: *entityServiceHost 
    entityServicePort: *entityServicePort
    attributeServiceHost: *attributeServiceHost
    attributeServicePort: *attributeServicePort
    configServiceHost: *configServiceHost
    configServicePort: *configServicePort 
  javaOpts: "-Xms512M -Xmx768M"
  resources:
    requests:
      cpu: "0.5"
      memory: "1Gi"
    limits:
      cpu: "1"
      memory: "1Gi"

  kafka-topic-creator:
    enabled: true
    kafka:
      topics:
        - name: enriched-structured-traces
          replicationFactor: 3
          partitions: 8
          configs:
            - retention.bytes=1073741824
            - retention.ms=21600000

hypertrace-view-generator:
  viewCreatorJobConfig:
    data:
      application.conf: |-
        pinot.retentionTimeValue = 5
        pinot.retentionTimeUnit = DAYS
              
  kafka-topic-creator:
    enabled: true
    kafka:
      topics:
        - name: backend-entity-view-events
          replicationFactor: 3
          partitions: 8
          configs:
            - retention.bytes=1073741824
            - retention.ms=21600000
        - name: raw-trace-view-events
          replicationFactor: 3
          partitions: 8
          configs:
            - retention.bytes=1073741824
            - retention.ms=21600000
        - name: raw-service-view-events
          replicationFactor: 3
          partitions: 8
          configs:
            - retention.bytes=1073741824
            - retention.ms=21600000
        - name: service-call-view-events
          replicationFactor: 3
          partitions: 8
          configs:
            - retention.bytes=1073741824
            - retention.ms=21600000
        - name: span-event-view
          replicationFactor: 3
          partitions: 8
          configs:
            - retention.bytes=1073741824
            - retention.ms=21600000

gateway-service:
  resources:
    requests:
      cpu: "0.25"
      memory: "512Mi"
    limits:
      cpu: "0.5"
      memory: "512Mi"

entity-service:
  resources:
    requests:
      cpu: "0.25"
      memory: "512Mi"
    limits:
      cpu: "0.5"
      memory: "512Mi"

attribute-service:
  resources:
    requests:
      cpu: "0.25"
      memory: "128Mi"
    limits:
      cpu: "0.5"
      memory: "256Mi"

query-service:
  resources:
    requests:
      cpu: "0.25"
      memory: "512Mi"
    limits:
      cpu: "0.5"
      memory: "512Mi"
  queryServiceConfig:
    data:
      zookeeperConnectionString: zookeeper:2181/pinot/hypertrace-views

config-service:
  resources:
    requests:
      cpu: "0.1"
      memory: "128Mi"
    limits:
      cpu: "0.25"
      memory: "256Mi"
      
hypertrace-data-query-service:
  queryServiceConfig:
    data:
      attributeClient:
        host: hypertrace-data-config-service
        port: 9012
  gatewayServiceConfig:
    data:
      application.conf: |-
        query.service.config = {
          host = localhost
          port = 9001
        }
        entity.service.config = {
          host = hypertrace-data-config-service
          port = 9012
        }
        attributes.service.config = {
          host = hypertrace-data-config-service
          port = 9012
        }
  resources:
    requests:
      cpu: "0.25"
      memory: "512Mi"
    limits:
      cpu: "0.5"
      memory: "512Mi"

hypertrace-data-config-service:
  resources:
    requests:
      cpu: "0.25"
      memory: "512Mi"
    limits:
      cpu: "0.5"
      memory: "512Mi"       

hypertrace-graphql-service:
  javaOpts: "-Xms128M -Xmx256M"
  serviceConfig:
    defaultTenantId: "__default"
    gatewayService:
      host: *gatewayServiceHost
      port: *gatewayServicePort
    attributeService:
      host: *attributeServiceHost
      port: *attributeServicePort
    entityService:
      host: *entityServiceHost
      port: *entityServicePort
    configService:
      host: *configServiceHost
      port: *configServicePort
  resources:
    requests:
      cpu: "0.25"
      memory: "320Mi"
    limits:
      cpu: "0.5"
      memory: "320Mi"

hypertrace-ui:
  service:
    type: LoadBalancer
  nginxConfig:
    graphqlRedirectEnabled: true
  resources:
    requests:
      cpu: "0.1"
      memory: "128Mi"
    limits:
      cpu: "0.25"
      memory: "256Mi"

kafka-topic-creator:
  enabled: false
