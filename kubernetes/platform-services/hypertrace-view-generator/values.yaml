#
# Note about Namespace
# --------------------
# It is deliberately left out here and using the helm -n or --namespace flag you can deploy your resources to the same
# namespace as the release. If you leave it out, your resources will be deployed to the default namespace.
# Also, not that the namespace you are deploying to should already exist otherwise the helm command will fail.
# You can always specify a different namespace for a resource by setting it directly in it's yaml file or
# making it configurable by defining it in this file.

######################################
# Common across deployments and jobs #
######################################
maxUnavailable: 0

images:
  pullPolicy: IfNotPresent
  creator:
    repository: hypertrace/hypertrace-view-creator
    tagOverride: ""
  generator:
    repository: hypertrace/hypertrace-view-generator
    tagOverride: ""

imagePullSecrets: []

containerAdminPort: 8099

nodeLabels: {}

logConfig:
  name: view-generator-log-config
  monitorInterval: 30
  rootLogger:
    level: INFO
  appender:
    rolling:
      enabled: false

############################################
# View Creation Jobs                       #
############################################

viewCreatorJobConfig:
  name: view-creator-job-config
  data:
    application.conf: |-
      pinot.retentionTimeValue = 5
      pinot.retentionTimeUnit = DAYS

creator:
  allViews:
    jobName: all-views-creation-job
    javaOpts: "-XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=75.0"
    resources:
      limits:
        cpu: 1.0
        memory: 384Mi
      requests:
        cpu: 0.1
        memory: 384Mi

############################################
# View Generation Deployments              #
############################################
viewGeneratorGroups:
  all-views-generator:
    enabled: true
    generator:
      replicaCount: 1
      deploymentName: all-views-generator
      podLabels:
        app: all-views-generator
      deploymentSelectorMatchLabels:
        app: all-views-generator
      javaOpts: "-XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=75.0"
      livenessProbe:
        initialDelaySeconds: 30
        periodSeconds: 10
      readinessProbe:
        initialDelaySeconds: 30
        periodSeconds: 10
      resources:
        limits:
          cpu: 1.0
          memory: 1.5Gi
        requests:
          cpu: 0.5
          memory: 512Mi
      serviceConfig:
        name: all-views-generator-config
        viewgenerators:
          - view-gen-backend-entity
          - view-gen-raw-service
          - view-gen-raw-traces
          - view-gen-service-call
          - view-gen-span-event
        kafka:
          streams:
            config:
              metricsRecordingLevel: INFO
              numStreamThreads: 2
              bootstrapServers: "bootstrap:9092"
              schemaRegistryUrl: "http://schema-registry-service:8081"
              autoOffsetReset: "latest"
  backendEntityView:
    enabled: false
    generator:
      replicaCount: 1
      deploymentName: backend-entity-view-generator
      podLabels:
        app: backend-entity-view-generator
      deploymentSelectorMatchLabels:
        app: backend-entity-view-generator
      javaOpts: "-XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=75.0"
      livenessProbe:
        initialDelaySeconds: 30
        periodSeconds: 10
      readinessProbe:
        initialDelaySeconds: 30
        periodSeconds: 10
      resources:
        limits:
          cpu: 0.2
          memory: 512Mi
        requests:
          cpu: 0.1
          memory: 320Mi
      serviceConfig:
        name: backend-entity-view-generator-config
        viewgenerators:
          - view-gen-backend-entity
        kafka:
          streams:
            config:
              metricsRecordingLevel: INFO
              numStreamThreads: 2
              bootstrapServers: "bootstrap:9092"
              schemaRegistryUrl: "http://schema-registry-service:8081"
              autoOffsetReset: "latest"
  rawServiceView:
    enabled: false
    generator:
      replicaCount: 1
      deploymentName: raw-service-view-generator
      podLabels:
        app: raw-service-view-generator
      deploymentSelectorMatchLabels:
        app: raw-service-view-generator
      javaOpts: "-XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=75.0"
      livenessProbe:
        initialDelaySeconds: 30
        periodSeconds: 10
      readinessProbe:
        initialDelaySeconds: 30
        periodSeconds: 10
      resources:
        limits:
          cpu: 0.2
          memory: 512Mi
        requests:
          cpu: 0.1
          memory: 320Mi
      serviceConfig:
        name: raw-service-view-generator-config
        viewgenerators:
          - view-gen-raw-service
        kafka:
          streams:
            config:
              metricsRecordingLevel: INFO
              numStreamThreads: 2
              bootstrapServers: "bootstrap:9092"
              schemaRegistryUrl: "http://schema-registry-service:8081"
              autoOffsetReset: "latest"
  rawTraceView:
    enabled: false
    generator:
      replicaCount: 1
      deploymentName: raw-trace-view-generator
      podLabels:
        app: raw-trace-view-generator
      deploymentSelectorMatchLabels:
        app: raw-trace-view-generator
      javaOpts: "-XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=75.0"
      livenessProbe:
        initialDelaySeconds: 30
        periodSeconds: 10
      readinessProbe:
        initialDelaySeconds: 30
        periodSeconds: 10
      resources:
        limits:
          cpu: 0.2
          memory: 512Mi
        requests:
          cpu: 0.1
          memory: 320Mi
      serviceConfig:
        name: raw-trace-view-generator
        viewgenerators:
          - view-gen-raw-traces
        kafka:
          streams:
            config:
              metricsRecordingLevel: INFO
              numStreamThreads: 2
              bootstrapServers: "bootstrap:9092"
              schemaRegistryUrl: "http://schema-registry-service:8081"
              autoOffsetReset: "latest"
  serviceCallView:
    enabled: false
    generator:
      replicaCount: 1
      deploymentName: service-call-view-generator
      podLabels:
        app: service-call-view-generator
      deploymentSelectorMatchLabels:
        app: service-call-view-generator
      javaOpts: "-XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=75.0"
      livenessProbe:
        initialDelaySeconds: 30
        periodSeconds: 10
      readinessProbe:
        initialDelaySeconds: 30
        periodSeconds: 10
      resources:
        limits:
          cpu: 0.2
          memory: 512Mi
        requests:
          cpu: 0.1
          memory: 320Mi
      serviceConfig:
        name: service-call-view-generator-config
        viewgenerators:
          - view-gen-service-call
        kafka:
          streams:
            config:
              metricsRecordingLevel: INFO
              numStreamThreads: 2
              bootstrapServers: "bootstrap:9092"
              schemaRegistryUrl: "http://schema-registry-service:8081"
              autoOffsetReset: "latest"
  spanEventView:
    enabled: false
    generator:
      deploymentName: span-event-view-generator
      podLabels:
        app: span-event-view-generator
      deploymentSelectorMatchLabels:
        app: span-event-view-generator
      javaOpts: "-XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=75.0"
      livenessProbe:
        initialDelaySeconds: 30
        periodSeconds: 10
      readinessProbe:
        initialDelaySeconds: 30
        periodSeconds: 10
      resources:
        limits:
          cpu: 0.2
          memory: 512Mi
        requests:
          cpu: 0.1
          memory: 320Mi
      serviceConfig:
        name: span-event-view-generator-config
        viewgenerators:
          - view-gen-span-event
        kafka:
          streams:
            config:
              metricsRecordingLevel: INFO
              numStreamThreads: 2
              bootstrapServers: "bootstrap:9092"
              schemaRegistryUrl: "http://schema-registry-service:8081"
              autoOffsetReset: "latest"

############################################
# Kafka topic creation job                 #
############################################
kafka-topic-creator:
  jobName: view-generation-kafka-topics-creator
  helmHook: pre-install,pre-upgrade
  kafka:
    topics:
      - name: backend-entity-view-events
        replicationFactor: 1
        partitions: 2
        configs:
          - retention.bytes=4294967296
          - retention.ms=259200000
      - name: raw-trace-view-events
        replicationFactor: 1
        partitions: 2
        configs:
          - retention.bytes=4294967296
          - retention.ms=259200000
      - name: raw-service-view-events
        replicationFactor: 1
        partitions: 2
        configs:
          - retention.bytes=4294967296
          - retention.ms=259200000
      - name: service-call-view-events
        replicationFactor: 1
        partitions: 2
        configs:
          - retention.bytes=4294967296
          - retention.ms=259200000
      - name: span-event-view
        replicationFactor: 1
        partitions: 2
        configs:
          - retention.bytes=4294967296
          - retention.ms=259200000
  zookeeper:
    address: zookeeper:2181
  imagePullSecrets: []
  podAnnotations: {}